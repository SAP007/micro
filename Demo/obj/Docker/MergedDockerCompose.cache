name: dockercompose13727594402455263897
services:
  apigateway:
    build:
      context: /Users/sofie-amaliepetersen/Projects/Demo
      dockerfile: ApiGateway/Dockerfile
    container_name: apigateway
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: apigateway
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8001"
      protocol: tcp
  customerwebapi:
    build:
      context: /Users/sofie-amaliepetersen/Projects/Demo
      dockerfile: CustomerWebApi/Dockerfile
    container_name: customer-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: customerwebapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
  db:
    container_name: customer-db
    environment:
      DB_HOST: localhost
      POSTGRES_DB: customers
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: postgres
    image: postgres:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: "5432"
      protocol: tcp
    volumes:
    - type: volume
      source: pgdata
      target: /usr/var/lib/postgresql/data
      volume: {}
  messageservice:
    build:
      context: /Users/sofie-amaliepetersen/Projects/Demo
      dockerfile: MessageService/Dockerfile
    container_name: messageservice
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: messageservice
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: /Users/sofie-amaliepetersen/.aspnet/https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: /Users/sofie-amaliepetersen/.microsoft/usersecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  movieservice:
    build:
      context: /Users/sofie-amaliepetersen/Projects/Demo
      dockerfile: MovieService/Dockerfile
    container_name: movieservice
    depends_on:
      rabbitmq:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: movieservice
    links:
    - rabbitmq
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    restart: on-failure
    volumes:
    - type: bind
      source: /Users/sofie-amaliepetersen/.aspnet/https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: /Users/sofie-amaliepetersen/.microsoft/usersecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  rabbitmq:
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_USER: guest
    image: rabbitmq:3-management-alpine
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5672
      published: "5672"
      protocol: tcp
    - mode: ingress
      target: 15672
      published: "15672"
      protocol: tcp
    restart: always
  testsanity:
    build:
      context: /Users/sofie-amaliepetersen/Projects/Demo
      dockerfile: TestSanity/Dockerfile
    container_name: testsanity
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: testsanity
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: /Users/sofie-amaliepetersen/.aspnet/https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: /Users/sofie-amaliepetersen/.microsoft/usersecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose13727594402455263897_default
volumes:
  pgdata:
    name: dockercompose13727594402455263897_pgdata